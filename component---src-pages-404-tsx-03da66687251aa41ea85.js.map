{"version":3,"sources":["webpack:///./src/pages/404.tsx","webpack:///./node_modules/@material-ui/core/esm/Typography/Typography.js"],"names":["useStyles","makeStyles","root","height","display","alignItems","justifyContent","flexDirection","image","width","maxWidth","pageNotFoundPageLogger","logger","getPageLogger","NotFoundPage","styles","errorImage","useStaticQuery","useEffect","view","pageName","className","fluid","childImageSharp","variant","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","props","ref","_props$align","align","classes","_props$color","color","component","_props$display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","_props$variantMapping","variantMapping","other","Component","concat","theme","margin","typography","caption","button","overline","srOnly","position","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","palette","primary","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","displayBlock","name"],"mappings":"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","file":"component---src-pages-404-tsx-03da66687251aa41ea85.js","sourcesContent":["import { makeStyles, Typography } from '@material-ui/core';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport GatsbyImage from 'gatsby-image';\nimport React, { useEffect } from 'react';\nimport Layout from 'src/components/Layout/Page';\nimport { FluidImageSharp } from 'src/models/image';\nimport { logger } from '@lubycon/logger';\n\nconst useStyles = makeStyles({\n  root: {\n    height: '80vh',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n  },\n  image: {\n    width: '100%',\n    maxWidth: 800,\n  },\n});\n\nconst pageNotFoundPageLogger = logger.getPageLogger('404_page');\n\nconst NotFoundPage = () => {\n  const styles = useStyles();\n  const { errorImage } = useStaticQuery<{ errorImage: FluidImageSharp }>(graphql`\n    query {\n      errorImage: file(absolutePath: { regex: \"/error.png/\" }) {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `);\n\n  useEffect(() => {\n    pageNotFoundPageLogger.view();\n  }, []);\n\n  return (\n    <Layout pageName=\"페이지를 찾을 수 없습니다\">\n      <div className={styles.root}>\n        <GatsbyImage className={styles.image} fluid={errorImage.childImageSharp.fluid} />\n        <Typography variant=\"h5\">길을 잃어버렸네요...뒤로 돌아가세요!</Typography>\n      </div>\n    </Layout>\n  );\n};\n\nexport default NotFoundPage;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);"],"sourceRoot":""}